export type AddSpecimanModalFormValues = {
  caneData: CanedataItem | null | undefined;
  specimensData: DeviceItem[];
  currentStep: number;
};

export type AddSpecimanModalDefaultItemsList = {
  label: string;
  value: any;
};

export type DeviceItem = {
  specimentype: string;
  deviceType: string;
  qty: number | string;
  color: string;
  notes: string;
  description: string;
  numberOfSpecimens: string;
  freesedate: string | null;
  rfId: string;
  rfidType: RFIDType | null;
  rfidReader: string | null;
  rfidReaderId: string;
  rfidItemType: string;
};

export type CanedataItem = {
  // step 1
  receiptDate: string;
  clinic: { id: string; name: string };
  facilityId: { id: string; name: string };
  deviceNumber: number;
  rfId: string;
  caneColor: string;
  caneLabel: string;
  id: string;
  rfidType: RFIDType | null;
  rfidReader: string | null;
  rfidReaderId: string;
  rfidItemType: string;
  primaryIdentifier: { id: string; name: string; userId: string };
  secondaryIdentifier: { id: string; name: string };
  // step2
  idLabResult: IdLabResultType;
  FDAEligibility: FDAEligibilityType | null;
  reactivity: boolean | null;
  reactive: string | null;
  noteId: string;
  notes: string | null;
};

export enum RFIDType {
  Manual = 'Manual',
  AutoGenerated = 'AutoGenerated',
  Reader = 'Reader',
}

export enum FDAEligibilityType {
  Yes = 'Yes',
  No = 'No',
  NA = 'N/A',
}

export type AddSpecimanModalFormValuesUpdateLodation = {
  caneData: CanedataItemUpdateLodation | null | undefined;
  specimensData: DeviceItem[];
  currentStep: number;
};

export type CanedataItemUpdateLodation = {
  clinic: { id: string; name: string };
  facilityId: string;
  vaultId: string;
  tankId: string;
  pieId: string;
  canisterId: string;
  slotId: string;
  deviceNumber: number;
  rfId: string;
  caneColor: string;
  caneLabel: string;
  disposeAllConsent: boolean;
  aneuploidDisposeConsent: string;
  abandonedTissue: string;
  keepAneuploidAndBill: string;
  allAneuploidEmbyosInCane: string;
  cycleNumber: string;
  id: string;
  notes: string;
  rfidType: RFIDType | null;
  rfidReader: string | null;
  rfidReaderId: string;
  rfidItemType: string;
};

// Add devices on Cane Details
export type AddDevicesModalFormValues = {
  devices: DeviceItem[];
  caneId: string;
};

export const RFIDTypeTitles: Record<RFIDType, string> = {
  [RFIDType.Manual]: 'Manual',
  [RFIDType.AutoGenerated]: 'Autogenerated',
  [RFIDType.Reader]: 'Reader',
};

export enum IdLabResultType {
  NonReactive = 'NonReactive',
  Reactive = 'Reactive',
  IncompleteTesting = 'Incomplete Testing',
}
